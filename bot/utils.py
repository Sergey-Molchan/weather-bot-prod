# bot/utils.py
from typing import Dict
from bot.config import THUNDERSTORM_CODES, ALERT_WINDOW
from datetime import datetime, timedelta

def format_weather_data(data: Dict, point_name: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≤—ã–≤–æ–¥–∞"""
    if not data or 'current' not in data:
        return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"

    current = data['current']
    forecast_day = data.get('forecast', {}).get('forecastday', [])
    forecast = forecast_day[0]['day'] if forecast_day else {}

    message = (
        f"üå§Ô∏è **–ü–æ–≥–æ–¥–∞ –Ω–∞ {point_name}**\n"
        f"‚Ä¢ **–°–µ–π—á–∞—Å:** {current['temp_c']}¬∞C, {current['condition']['text']}\n"
        f"‚Ä¢ **–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:** {current['feelslike_c']}¬∞C\n"
        f"‚Ä¢ **–í–µ—Ç–µ—Ä:** {current['wind_kph']} –∫–º/—á, {current['wind_dir']}\n"
        f"‚Ä¢ **–í–ª–∞–∂–Ω–æ—Å—Ç—å:** {current['humidity']}%\n"
        f"‚Ä¢ **–û—Å–∞–¥–∫–∏:** {current['precip_mm']} –º–º\n"
    )

    if forecast:
        message += (
            f"\nüìÖ **–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:**\n"
            f"‚Ä¢ –ú–∞–∫—Å: {forecast['maxtemp_c']}¬∞C\n"
            f"‚Ä¢ –ú–∏–Ω: {forecast['mintemp_c']}¬∞C\n"
            f"‚Ä¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: {forecast['daily_chance_of_rain']}%\n"
            f"‚Ä¢ –£–§-–∏–Ω–¥–µ–∫—Å: {forecast['uv']}"
        )

    alerts = check_thunderstorm(data)
    if alerts:
        message += f"\n\n‚ö†Ô∏è **–û–∂–∏–¥–∞—é—Ç—Å—è –≥—Ä–æ–∑—ã!**"
        for alert in alerts[:3]:
            message += f"\n‚ñ´Ô∏è {alert['time']} - {alert['condition']} ({alert['chance']}%)"

    return message

def check_thunderstorm(weather_data: Dict) -> list[dict]:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è –≥—Ä–æ–∑—ã (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ utils)"""
    if not weather_data or 'forecast' not in weather_data:
        return []

    alerts = []
    try:
        for day in weather_data['forecast']['forecastday']:
            for hour in day['hour']:
                if hour['condition']['code'] in THUNDERSTORM_CODES:
                    alert_time = datetime.strptime(hour['time'], "%Y-%m-%d %H:%M")
                    time_window = datetime.now() + timedelta(hours=ALERT_WINDOW)

                    if datetime.now() < alert_time < time_window:
                        alerts.append({
                            "time": alert_time.strftime('%H:%M %d.%m'),
                            "condition": hour['condition']['text'],
                            "chance": hour['chance_of_thunder'],
                            "precip": hour['precip_mm'],
                            "wind": hour['wind_kph']
                        })
    except Exception as e:
        from bot.services import logger
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")

    return alerts